services:
  mongo1:
    image: mongo:6.0
    container_name: mongo1
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all"]
    volumes:
      - ./mongo/mongod.conf:/etc/mongod.conf
      - mongo1_data:/data/db
    networks:
      - mongo-cluster

  mongo2:
    image: mongo:6.0
    container_name: mongo2
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all"]
    volumes:
      - ./mongo/mongod.conf:/etc/mongod.conf
      - mongo2_data:/data/db
    networks:
      - mongo-cluster

  mongo3:
    image: mongo:6.0
    container_name: mongo3
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all"]
    volumes:
      - ./mongo/mongod.conf:/etc/mongod.conf
      - mongo3_data:/data/db
    networks:
      - mongo-cluster

  mongo-init:
    image: mongo:6.0
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    networks:
      - mongo-cluster
    entrypoint: >
      sh -c "
        echo '‚è≥ Waiting for all MongoDB nodes to be ready...'
        
        # Wait for all mongo nodes to be ready
        until mongosh --quiet mongo1:27017 --eval 'db.adminCommand({ ping:1 })'; do
          echo 'waiting for mongo1‚Ä¶';
          sleep 2;
        done;
        
        until mongosh --quiet mongo2:27017 --eval 'db.adminCommand({ ping:1 })'; do
          echo 'waiting for mongo2‚Ä¶';
          sleep 2;
        done;
        
        until mongosh --quiet mongo3:27017 --eval 'db.adminCommand({ ping:1 })'; do
          echo 'waiting for mongo3‚Ä¶';
          sleep 2;
        done;
        
        echo '‚úÖ All MongoDB nodes are ready, waiting 10 seconds for stabilization...'
        sleep 10;
        
        echo 'üöÄ Initializing replica set...'
        mongosh mongo1:27017 /docker-entrypoint-initdb.d/mongo-init.js
        
        echo '‚úÖ Replica set initialization completed'
      "
    volumes:
      - ./mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js

  app:
    build: .
    container_name: my-node-app
    env_file: .env
    ports:
      - "3000:3000"
    depends_on:
      - mongo-init  # Wait for replica set initialization
    networks:
      - mongo-cluster
    restart: unless-stopped

volumes:
  mongo1_data:
  mongo2_data:
  mongo3_data:

networks:
  mongo-cluster:
    driver: bridge